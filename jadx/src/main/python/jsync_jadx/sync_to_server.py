from jadx.api.plugins import JadxPluginContext
from jadx.core.dex.nodes import ClassNode, MethodNode, FieldNode
from org.slf4j import Logger

from common.symbol import Symbol
from client_base.connection import ConnectionABC
from client_base.rename_engine import RenameEngineABC
from java_common.sync_to_server import JavaSyncToServer
from .utils import encode_symbol, project_id, get_name


QUICK = True


class JADXSyncToServer(JavaSyncToServer):
    def __init__(self, context, logger, connection, rename_engine, callback):
        # type: (JadxPluginContext, Logger, ConnectionABC, RenameEngineABC, callable) -> None
        super(JADXSyncToServer, self).__init__(connection)
        self._context = context
        self._logger = logger
        self._rename_engine = rename_engine
        self._symbols = {}
        self._callback = callback

    def _node_is_autogenerated(self, node):
        # TODO: Understand if node alias is autogenerated.
        #       Probably requires PR to jadx
        return False

    def _process_node(self, node):
        # type: (ClassNode | MethodNode | FieldNode) -> (str, Symbol) | None
        if QUICK:
            name = get_name(node)
            if name == node.alias:
                return False

            project = project_id(node)
            symbol = encode_symbol(node)
        else:
            project = project_id(node)
            symbol = encode_symbol(node)
            if self._rename_engine.is_symbol_synced(project, symbol):
                return False

        if self._node_is_autogenerated(node):
            return False

        self._symbols.setdefault(project, []).append(symbol)
        return True

    def run(self):
        # type: () -> None
        self._logger.error("[JSync] Beginning Sync To Server")
        for clazz in self._context.decompiler.root.classes:
            # Process class
            self._process_node(clazz)

            for method in clazz.methods:
                self._process_node(method)

            for field in clazz.fields:
                self._process_node(field)

        for project, symbols in self._symbols.items():
            self.upload_symbols(project, symbols)
            pass

        self._logger.error("[JSync] Finished Sync To Server")
        self._callback()
